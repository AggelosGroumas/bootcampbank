package ebanking.dao;

import ebanking.exceptions.UserNotFoundException;
import ebanking.model.User;
import ebanking.model.UserAccount;
import org.slf4j.Logger;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import static org.slf4j.LoggerFactory.getLogger;

/**
 * @author <a href="mailto:a.groumas@app-art.gr">Aggelos Groumas</a>
 */
public class UserAccountDAO {
        private static final Logger LOGGER = getLogger(UserAccountDAO.class);
    private Connection connection;

    public UserAccountDAO(Connection connection) {
        this.connection = connection;
    }

    public List<UserAccount> findByUserUsername(String username) throws UserNotFoundException {
        UserDAO userDAO = new UserDAO(connection);
        User user = userDAO.findUserByUsername(username);
        String query = "select * from useraccount where userid = (?)";

        List<UserAccount> accounts = new ArrayList<>();
        PreparedStatement pst;
        ResultSet rs;

        try {
            pst = connection.prepareStatement(query);
            pst.setInt(1, user.getId());
            rs = pst.executeQuery();

            while (rs.next()) {
                accounts.add(new UserAccount(rs.getInt("userid"), rs.getInt("accountid")));
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return accounts;
    }

    public int save(UserAccount userAccount) {
        int autoGeneratedID = -1;
        String insertQuery = "insert into useraccount(userid, accountid) values (?, ?)";
        try {
            PreparedStatement pst = connection.prepareStatement(insertQuery);
            pst.setInt(1, userAccount.getUserId());
            pst.setInt(2, userAccount.getAccountId());
            pst.executeUpdate();

            ResultSet tableKeys = pst.getGeneratedKeys();
            tableKeys.next();
            autoGeneratedID = tableKeys.getInt(1);
            LOGGER.debug("Useraccount {} created. ID is : {}\n", userAccount, autoGeneratedID);


        } catch (SQLException e) {
            e.printStackTrace();
        }
        return autoGeneratedID;
    }
}
